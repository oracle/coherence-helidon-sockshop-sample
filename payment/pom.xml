<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020,2021 Oracle and/or its affiliates.
 
  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>2.3.3</version>
        <relativePath/>
    </parent>

    <groupId>io.helidon.examples.sockshop</groupId>
    <artifactId>payment</artifactId>
    <packaging>jar</packaging>
    <version>2.3.3</version>

    <properties>
        <mainClass>io.helidon.microprofile.cdi.Main</mainClass>
        <container.repo>ghcr.io/oracle/coherence-helidon-sockshop</container.repo>
        <container.version>${project.version}</container.version>
        <jib.goal>dockerBuild</jib.goal>

        <!-- dependencies -->
        <version.lib.coherence>21.06.1</version.lib.coherence>
        <version.lib.lombok>1.18.18</version.lib.lombok>
        <version.lib.junit>5.7.1</version.lib.junit>
        <version.lib.hamcrest>2.2</version.lib.hamcrest>
        <version.lib.mockito>2.23.4</version.lib.mockito>
        <version.lib.rest-assured>4.3.3</version.lib.rest-assured>
        <version.plugin.surefire>2.22.2</version.plugin.surefire>
        <version.plugin.failsafe>2.22.2</version.plugin.failsafe>
        <version.plugin.surefire.provider.junit>1.3.2</version.plugin.surefire.provider.junit>
        <version.plugin.jib>3.1.4</version.plugin.jib>
    </properties>

    <repositories>
        <repository>
            <id>sonatype-staging</id>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-metrics</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-jaeger</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>

        <!-- Coherence dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-cdi-server</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-metrics</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-mp-config</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lib.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${version.lib.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.grpc</groupId>
            <artifactId>helidon-microprofile-grpc-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.lib.mockito}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${version.plugin.jib}</version>
                        <configuration>
                            <from>
                                <image>gcr.io/distroless/java@sha256:9d4092ba5e1c9dc4d1490fdead1dd7ea5c64e635b729fee11a6af55f51b337f8</image>
                            </from>
                            <to>
                                <image>${container.repo}-${project.artifactId}</image>
                                <tags>
                                    <tag>${container.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <!-- good defaults intended for containers -->
                                <jvmFlags>
                                    <jvmFlag>-server</jvmFlag>
                                    <jvmFlag>-Djava.awt.headless=true</jvmFlag>
                                    <jvmFlag>-XshowSettings:all</jvmFlag>
                                    <jvmFlag>-XX:+PrintCommandLineFlags</jvmFlag>
                                    <jvmFlag>-XX:+UnlockDiagnosticVMOptions</jvmFlag>
                                    <jvmFlag>-XX:InitialRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MinRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MaxRAMPercentage=70</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>7001</port>
                                </ports>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
