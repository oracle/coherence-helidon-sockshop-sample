<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020, 2025, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>4.1.3</version>
        <relativePath/>
    </parent>

    <groupId>com.oracle.coherence.examples.sockshop.helidon</groupId>
    <artifactId>carts</artifactId>
    <packaging>jar</packaging>
    <version>2.2.4-SNAPSHOT</version>

    <name>${project.artifactId}</name>
    <description>Shopping Cart service for Helidon Sock Shop demo application</description>

    <properties>
        <mainClass>com.oracle.coherence.examples.sockshop.helidon.carts.Application</mainClass>
        <container.repo>ghcr.io/oracle/coherence-helidon-sockshop</container.repo>
        <container.version>${project.version}</container.version>
        <jib.goal>dockerBuild</jib.goal>

        <!-- dependencies -->
        <version.lib.coherence>25.03</version.lib.coherence>
        <version.lib.lombok>1.18.36</version.lib.lombok>
        <version.lib.junit>5.12.1</version.lib.junit>
        <version.lib.hamcrest>3.0</version.lib.hamcrest>
        <version.lib.jandex>3.1.6</version.lib.jandex>
        <version.lib.otel.incubator>1.37.0-alpha</version.lib.otel.incubator>
        <version.lib.rest-assured>5.5.1</version.lib.rest-assured>
        <version.plugin.exec>3.5.0</version.plugin.exec>
        <version.plugin.surefire>3.2.5</version.plugin.surefire>
        <version.plugin.failsafe>3.2.5</version.plugin.failsafe>
        <version.plugin.jandex>${version.lib.jandex}</version.plugin.jandex>
        <version.plugin.jar>3.4.2</version.plugin.jar>
        <version.plugin.surefire.provider.junit>1.3.2</version.plugin.surefire.provider.junit>
        <version.plugin.jib>3.4.4</version.plugin.jib>
    </properties>

    <repositories>
        <repository>
            <id>sonatype-staging</id>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>sonatype-staging</id>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>jcenter.bintray.com</id>
            <url>https://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jandex</artifactId>
                    <groupId>org.jboss</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>

        <!-- Coherence dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-cdi-server</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-mp-config</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>

        <!-- jandex -->
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex</artifactId>
            <version>${version.lib.jandex}</version>
        </dependency>

        <!-- tracing -->
        <dependency>
            <groupId>io.helidon.microprofile.telemetry</groupId>
            <artifactId>helidon-microprofile-telemetry</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api-incubator</artifactId>
            <version>${version.lib.otel.incubator}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lib.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>io.helidon.logging</groupId>
            <artifactId>helidon-logging-jul</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${version.lib.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <version>${version.plugin.jandex}</version>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>-Djdk.serialFilter=*;!*</argLine>
                    <systemPropertyVariables>
                        <coherence.metrics.http.enabled>true</coherence.metrics.http.enabled>
                        <coherence.wka>127.0.0.1</coherence.wka>
                        <coherence.ttl>0</coherence.ttl>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.jar}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${version.plugin.exec}</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argLine>-Djdk.serialFilter=*;!*</argLine>
                        <argument>-Dcoherence.wka=127.0.0.1</argument>
                        <argument>-Dcoherence.grpc.enabled=false</argument>
                        <argument>-Dcoherence.metrics.http.enabled=true</argument>
                        <argument>-Dotel.sdk.disabled=false</argument>
                        <argument>-Dotel.java.global-autoconfigure.enabled=true</argument>
                        <argument>-Dotel.metrics.exporter=none</argument>
                        <argument>-Dotel.logs.exporter=none</argument>
                        <argument>-Dotel.service.name=Carts</argument>
                        <argument>-classpath</argument>
                        <classpath/>
                        <argument>io.helidon.microprofile.cdi.Main</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>container</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${version.plugin.jib}</version>
                        <configuration>
                            <from>
                                <image>gcr.io/distroless/java21-debian12</image>
                            </from>
                            <to>
                                <image>${container.repo}-${project.artifactId}</image>
                                <tags>
                                    <tag>${container.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <!-- good defaults intended for containers -->
                                <jvmFlags>
                                    <jvmFlag>-server</jvmFlag>
                                    <jvmFlag>-Djava.awt.headless=true</jvmFlag>
                                    <jvmFlag>-XshowSettings:all</jvmFlag>
                                    <jvmFlag>-XX:+PrintCommandLineFlags</jvmFlag>
                                    <jvmFlag>-XX:+UnlockDiagnosticVMOptions</jvmFlag>
                                    <jvmFlag>-XX:InitialRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MinRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MaxRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-Djdk.serialFilter=*;!*</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>7001</port>
                                </ports>
                                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
